#!/bin/bash
#
# awslist
#
# List AWS entities with caching and simple text formatting.
#
# Usage:
# awslist <itemname> <apicategory> <apimethod> [ <filter pattern> [ <filter pattern> ... ] ]
#
# Example:
# awslist vpc describe-vpcs aws30
#
#
set -o nounset
set -o pipefail
set -o errexit


if [ ! "${3:-}" ]
then
  echo "usage: awslist <itemname> <apicategory> <apimethod> [ <filter pattern> [ <filter pattern> ... ] ]"
  exit 2
fi


thing_being_listed="$1"
api_category="$2"
api_method="$3"
basename="$(basename "$0")"

shift
shift
shift

if [ \( ! "${AWS_SECRET_ACCESS_KEY:-}" -o ! "${AWS_ACCESS_KEY_ID:-}" \) -a ! "${AWS_PROFILE:-}" ]
then
  echo "Must set either: \$AWS_PROFILE or \$AWS_SECRET_ACCESS_KEY and \$AWS_ACCESS_KEY_ID"
  exit 2
fi

# default seconds to cache output
#
DEFAULT_TIMEOUT=300

# allow overriding output cache timeout by specifying $AWSLIST_CACHE_TIMEOUT
#
if [ "${AWSLIST_CACHE_TIMEOUT:-}" ]
then
  timeout=$AWSLIST_CACHE_TIMEOUT
else
  timeout=$DEFAULT_TIMEOUT
fi

log() {
  LOG="/tmp/$basename.log"
  #date >> $LOG
  #echo "$*" >> $LOG
}

log "timeout: $timeout"

# use the userid hitting aws as a cache subkey so instance lists from different accounts will be cached separately
#
CACHE_SUB_KEY="$(cache_run 99999999 "aws sts get-caller-identity --query 'UserId' --output text" "${AWS_ACCESS_KEY_ID:-}-.-${AWS_PROFILE:-}" )"-${thing_being_listed}-${api_method}

tempfile=$(mktemp /tmp/$basename.XXXXXX)
tempfile2=$(mktemp /tmp/$basename.XXXXXX)

regions=$(cache_run 9999999 "aws ec2 describe-regions  --query Regions[*].RegionName --output text" $CACHE_SUB_KEY | sed 's/ap-northeast-2//')
printed_header=""
for region in $regions
do
  if [ ! "$printed_header" ]
    then
      echo -n "Region," >> $tempfile
      cache_run $timeout "aws --region $region "${api_category}" "${api_method}" | format_${thing_being_listed}_json.js" $CACHE_SUB_KEY >> $tempfile
      printed_header=1
    else
      cache_run $timeout "aws --region $region "${api_category}" "${api_method}" | format_${thing_being_listed}_json.js" $CACHE_SUB_KEY | tail -n +2 | sed "s/^/$region,/g" >> $tempfile &
    fi
done
wait
while [ "${1:-}" ]
do
  cat "$tempfile" | grep -i "$1" > "$tempfile2"
  cat "$tempfile2" > "$tempfile"
  shift
done

cat $tempfile

