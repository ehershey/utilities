#!/usr/bin/python
#
#
# Types of things to be able to specify:
# # Day
# ## Today (default)
# ## Yesterday
# ## Two days ago (bonus feature)
# # Meal
# ## "current" (default - logic based on time of day)
# ### Time periods should be dynamic
# ## Breakfast / Lunch / Dinner / "Buffer"
# ### Should be dynamic based on configured mfp meals
# # Serving size
# ## Size associated with food item (default if present - if item from meal or history)
# ## Numeric value (default if food not pulled from history)
# # Meal or food item
# ## case insensitive multiple word text search using first found:
# ### Meal
# ### Item from history
# ### Item from database
#
# Actions:
# # Log food
# # Remove last entry
# # Reporting?
#
# Goal:
# Manage mfp food log with minimum friction, thought, clicks or typing.
#
# Sample command lines:
# It's 3:30 pm and I just ate three egg whites. Log them to lunch:
# foodlog 3 white
# It's 3:30 pm and I ate a chopt spinach salad for lunch today. Log it to lunch:
# foodlog 1 chopt
# It's 3:30 pm and I remember I ate kashi and skim milk for breakfast today. Log their meal:
# foodlog b 1 kashi


import mechanicalsoup
import argparse
import myfitnesspal_auth
import meals

parser = argparse.ArgumentParser(description='Command Line Food Logger')
parser.add_argument('text_to_match', help='food item text')
parser.add_argument('-v', '--verbose', action='store_true',
                        help='Include some extra details')
parser.add_argument('-d', '--debug', action='store_true',
                        help='Include a lot of extra details')
args = parser.parse_args()



login_url = "https://www.myfitnesspal.com/account/login"
login_post_url = "https://www.myfitnesspal.com/account/login"
diary_url = "http://www.myfitnesspal.com/food/diary"
meals_url = "http://www.myfitnesspal.com/meal/mine"
add_pages_by_meal = {}

add_page_urls_by_meal = { 
    "breakfast": "http://www.myfitnesspal.com/user/ehershey/diary/add?meal=0",
    "lunch": "http://www.myfitnesspal.com/user/ehershey/diary/add?meal=1",
    "dinner": "http://www.myfitnesspal.com/user/ehershey/diary/add?meal=2" 
    }


browser = mechanicalsoup.Browser(soup_config={ "features": "html.parser"} )

if args.debug:
    print("Created browser object: {0}".format(browser))

login_page = browser.get(login_url)

if args.verbose:
    print("GET {0}".format(login_url))

#if args.debug:
    #print("Created browser object: {0}".format(browser))

login_form = login_page.soup.select("form")[0]

login_form.select("#username")[0]['value'] = myfitnesspal_auth.username
login_form.select("#password")[0]['value'] = myfitnesspal_auth.password
login_form.select("#remember_me")[0]['value'] = "1"

page2 = browser.submit(login_form, login_page.url)

user_link = page2.soup.find('a', class_='user-2')
if user_link and user_link.text == myfitnesspal_auth.username:
    print("logged in")

diary_page = browser.get(diary_url)

if args.verbose:
    print("GET {0}".format(diary_url))

add_food_link = diary_page.soup.find('a', text='Add Food')
if add_food_link:
    print("found food add link")

meal = meals.get_default_meal()
print("Using default meal: {meal}".format(meal=meal))

meal_url = add_page_urls_by_meal[meal]

if meal_url:
  print "meal_url: {meal_url}".format(meal_url=meal_url)


meal_page = browser.get(meal_url)

print(meal_page.soup.title.text)

# <a href="/account/logout">Log Out</a>
assert meal_page.soup.select('a[href="/account/logout"]')
